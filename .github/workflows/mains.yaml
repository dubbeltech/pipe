name: api

on:
  push:
    branches: [ main ]

jobs:
#First we will see the application build or not , then we will deploy in EC2
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2

  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Set up Python Environment
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
  
    - name: Run Tests
      run: |
        python -m unittest test.py

  Deploy:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2 
      - name: Deploy in EC2
        env:
            PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY  }}
            HOSTNAME : ${{ secrets.HOSTNAME  }}
            USER_NAME : ${{ secrets.USER_NAME  }}
            
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 700 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '
          
            #Now we have got the access of EC2 and we will start the deploy .
            cd /home/ubuntu/api &&
            git checkout main &&
            git fetch --all &&
            git reset --hard origin/main &&
            git pull origin main && docker stop $(docker ps -q) &&
            docker build -t 1528762/webapp:1.0 . && docker run -d -p 5000:5000 1528762/webapp:1.0 &&
            #docker image prune -a
            docker rmi $(docker images --filter -f 'dangling=true' -q --no-trunc)
          '
